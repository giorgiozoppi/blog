{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/luislost-challenge/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://jocorner.dev"}},"markdownRemark":{"id":"32d37d68-4693-55b0-b8c5-e6bafc3f8bc3","excerpt":"In this challenge we have to help Luis, a software engineer who appreciates walking into a forest, but usually gets lost. Now he is in the forest and shouldâ€¦","html":"<p>In this challenge we have to help Luis, a software engineer who appreciates walking into a forest, but usually gets lost. Now he is in the forest and should pass through a river. In the river there are K stones but some are explosive so forbidden to touch. Luis should jump through the stones to reach the other side of the river avoiding any explosion.\nLet be:</p>\n<ul>\n<li>each stone is marked as 0 if it is ok to touch, 1 if it is explosive.</li>\n<li>Luis can skip 1 stone while jumping so : +1 or +2 position in advance.</li>\n<li>the data provided always allows Luis to reach the end.</li>\n<li>the first element of the data is always 0.</li>\n<li>the last element of the data is always 0.\nSo we give to Luis an array containing the data on the stones, we want to find the minimum number of jumps that\nLuis can do given the array of data. Please help Luis, creating a function in your preferred language. Example array of data c1 = [0 0 1 0 0 1 0] or c2=[0 0 0 0 1 0]</li>\n</ul>\n<p>Try to help Luis writing a function jumpingOnClouds in your preferred language that helps him to do the best choice. I tried mine in C++.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">jumpingOnClouds</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">auto</span> jump <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t pos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> pos <span class=\"token operator\">&lt;</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span>pos<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            jump<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            pos <span class=\"token operator\">=</span> pos<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> \n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span>pos<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                jump<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                pos <span class=\"token operator\">=</span> pos <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> jump<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","fields":{"slug":"/luislost-challenge/"},"frontmatter":{"title":"Luis lost in the forest challenge","date":"17 Oct, 2020","description":"In this challenge we have to help Luis, a software engineer who appreciates walking into a forest, but usually gets lost. Now he is in the forest and should pass through a river. In the river there are K stones but some are explosive so forbidden to touch. Luis should jump through the stones to reach the other side of the river avoiding any explosion.","tags":["cpp","algorithms"],"cover":{"publicURL":"/static/ff525dc0b90a1761bed30323ee74f6b6/preview.jpg","childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='270'%20height='405'%20viewBox='0%200%20270%20405'%20preserveAspectRatio='none'%3e%3cpath%20d='M99%203l1%202c2-1%203%200%202%202h-3c-2%200-2%200%200%201s2%201-2%202l-3-1-2-1%201%204-1%201v2c1%201%201%202-1%202-2%201-2%201-1%202v5l2-1c1-2%202-2%202-1l1%201%201%201%202%201h3l1-1%201%201c0%202%200%203%202%202v-2c-2-2-1-7%201-7l1-1c0-3%203-4%206-3%201%200%202%200%201%201l-5%204c-4%204-4%204-2%204h5c1-2%201-2-1-2-1%200-1-1%202-3%202-3%203-3%203-1h2c1-2%202-1%201%201%200%201-1%202-2%201v2h-2l1%203%202-2%202-1%202%201v-3l2%204c1%202%201%202%203%201h1l-1%201-1%202%203-3%203-2v3l-1%204v3l-1%202v2c0%202%203-1%202-3h2l4%202%202%201%202%201%201%201%207%208%206%207%201%201%2011%2011c9%209%2010%2010%209%2012-1%201-1%201%201%201%202-1%2014%207%2013%2010l1%201c1-1%203%200%204%201%203%202%205%201%202-2v-2l2-1c-1-1%201-2%202-1l3%201c2-1%204%200%202%201-1%201-1%201%201%201l3%202%202%201c2-1%202-1%202%201v2c1%201%201%200%201-1h2c2%202%203%202%203%201-1-1%200-2%202-2%203-1%203%200%203%202l-1%202v4l2%202%202%202c2%203%202%204%201%204v3c1%201%200%201-1%201l-2%201h4l3%201%203%204c2%202%203%206%201%203-2-1-4%201-4%205l-1%202-1-2c0-3-1-3-4-3l-1-1c1-3-5-7-7-5-3%201-11-3-9-4%202-2%202-5%200-4l-4-2-1-1c2%200-6-5-9-5-1-1-2%200-3%201h-2l-1-1c-2%200-2%200-1-1%202-1%202-2%200-4s-2-2-3-1l-2%201%201%201%202%202c-2%201-10-5-9-7%200-1%200-2-2-2v-3c-1-2-1-2-1%200l-1%203v1l-1%202h-3c-2-1-4%200-4%202l-2%202c-2%200-2%200-1-1%202-1%202-1%201-2-2-1-4%201-3%204v2l4-2%203-2v2c-1%203%200%203%204%203%203%200%204%200%203%201%200%202%202%206%203%205v-2c-2-4-1-6%202-6s4%201%202%202v1c2%200%203%202%202%204v2l2-1%202%201c1%201%200%201-2%202l-4-1c0-2-4-1-4%201h3v1h-1l-1%201-1%201-2-1-1-1h-1v-1c2%200%202%200%201-2-1-3-2-3-2-1-1%201-1%201-1-1-1-2-2-2-5%200-2%200-2%200-3-2%200-2-3-1-3%202%200%202%200%202%201%201h3l-2%202-2%203c0%201%203%202%204%201v-3l2-2v5h1c0-2%202-1%202%201h1l2-1v1c-2%201-2%202-1%203%202%201%200%204-2%202h-4l-4-3c-3-5-5-4-3%201%202%203%202%204%200%204v1l-2%202c-2%202-2%202-3%201h-6l-1%201h-2l-2%201-2%202h-1c-1-1-1-1-1%201-1%202%202%204%204%202v-2c-1-1-1-1%201-2l2-1%201%201c-1%201%200%202%201%202l1%204h1l3-2%201-1v-1h1l2%202%202%201h-3c-2%200-2%200-1%201l3%201%204%202c2%202%203%201%202-2%200-2-1-3-2-2h-1l1-2h-1l-1-1c1-1%200-2-1-2-2-1-1-3%202-3%204%200%206%202%202%202v1l2%205%201%205v1c-1%200-2%202-2%207v6l1%204v5l-3-2-2-2-2-3c-2-2-2-2-1%200%200%201%200%202-2%202l2%202%206%203c2%200%200%204-3%204l-2%201h2l1%201-1%203h-2l-1%201-2%204-1-1v-2l-2-4c-1-2-1-2-2-1v3c2%205%202%209-1%2011l-3%201v-1l-1-2c-1-1-1-1-1%201%201%203%201%203-3%203-3%200-3-1-3-3l-1-3c-2%200-3-3-2-4v-1c-1%201-2%200-3-1%200-4%201-7%203-7l1-1h2c3%201%205%200%205-2s-1-2-5-2v2l-1%201c-1-2-3-2-4%200-2%201-2%201-2-1v-4l-1-3-1-6%201-4v-1h-1l-1-1-1-2h-1l-2-1%201%202c1%202%201%203-1%203v1l1%203%201%202%201%202v3c1%201%202%203%202%208l2%207-1%202c-2%201-4-5-6-11%200-3%202-5%203-2h1l-2-2-2-2-2-3-3-8c-2-7-2-7%200-6l1-1-1-1v-8l-1%201c-1%202-3%201-2%200%200-1%200-2-2-1h-2v2l3%206v5c-1-1-2-2-1-3l-1-1-2-2-2-6-2-5v-2l-1%203c1%204%201%205-2%203-2-1-2-1-1-2v-1l-2%202c0%202-1%203-2%201s-3-1-3%201l-1%201-1-1-1%201c-1%203%200%204%202%203l3-1c1%201-2%203-4%203l-2%201%201%201%201%201%203-1c4-2%205-4%202-3v-1l3-2%201-1c0-1%201-1%202%201h2l1%201c2%202%202%203%201%203h-3c-2-3-3-2-3%200s0%202%201%201h1v1l-1%202c1%201%200%201-1%201l-2%201%204%201%204%201-1%201h-1c0%202%204%203%204%201v2c0%202%200%203%201%202l1-1v3l-2%201v1l-1%201c-2%201%200%204%203%204l1%201%201%203c1%202%201%203-1%203l-2-2-1-1c0%202-1%202-3%202l-1%201-3%201-3-1%202%201%203%202%201%201h2l-2%202c-2%201-3%201-4-1h-2l-3%201c-2-1-3%200-5%202l-5%203v3l-1%201c0%203-7%206-9%204-1-2-4-1-4%200l-2%201c-2-1-4%201-2%203%202%201%202%201-1%204l-2%203%202-1h12l-3%202-1%202c1%200%205-2%207-5%203-2%207-3%206%200l1%202c2%200%206-3%204-4l-1-1h6l-2-1c-1%200-2%200-1-1l-2-1-4-1%201-1h2l2%201h2l-2-3c-2-2-1-6%201-6%201%200%201-1-1-1v-2l2%201%203-1c3-1%204-1%203%201l1%201c0-1%202%200%203%202%202%202%203%203%204%202%203-1%202%202%200%203l-1%201c2%200%202%201%201%203-1%201-1%201%202%201s3%200%203%202c0%203%203%204%203%202%200-1%201-1%202%201s1%202-1%201c-3%200-2%201%201%202l3%201-4%201c-3%200-5%201-5%202h-2l-1%201-1%202c-5%200-6%200-5%201l-1%201-2%202-1%201c-1%200-1-4%201-6l2-1%202-1-4-1c-4%200-6%202-3%202l-1%201-2%202h2l1%201c0%202-2%202-4%200-2-1-2-1%200-3v-1l-3%202-2%201v3l-3-1c0-2-2-1-2%201l-1%201h-1l-2%202v-1h-6c0%201-2%201-6-1l-2-2-1-2v-3l1-1v-1c-1%200-2%200-1-1l-1-1-1-2-2-2c-3-1-3-1-1%203%203%202%203%204%201%204v-1l-1-2v1l-2%201v-1c1-1%200-2-2-3l-2-3v-1l-1-2%202-1c1%201%204%200%204-1l-3-1c-1%201-3%200-3-1-2-1-4%202-2%204s1%202-2%200l-3-1-2-2c-1-2-1-2%202-2%201%200%202%200%201-1l-3-1h-4c-3%200-5-3-3-4l3-2v-1h-4l-1-2v-2l-1-1-1-1-2-2h-3l-1%201-1-1v-2h-2l1-2c3%200%203-3%201-4s-2-1%202-1c3-1%203-1%201-2h-8v-2s2-1%202-3l2-1%201%201%201-1%201-6h1c1-1-1-3-3-2l-3-1c-1-2-5-3-6-2l-2-1v-2c-2-6-2-11-1-13%203-2%203-6%201-6-3-2%200-3%204-2h3l-2-1-3-2h-1l-2%201v-4c-2%201-2%200-2-1%200-2%200-2%202-1s3-1%201-2h-2l-1-13c1%200%206%204%205%205l1%202c1%200%202%201%201%202%200%202%200%202%202%201l3%201%202%201v-1c-1%200-1-1%201-2v-3l-2%201c-1%201-2%201-4-1s-2-3-1-3c2%200%202%200%201-2-1-1-2-2-3-1-3%201-3%201-3-1l-2-2-2-2%201-1v-2l1-2c1-1%201-1-1-2l-1-4c1-2%200-3-1-3-2-1-1-5%202-6%201%200%202%200%202%202%200%201%201%201%202-2l1-3-2%201-4%201c-1%200-2%200-2-3-2-7-2-8-1-8v-5l-1-12-1-6-1%2017v15l-1-1%201%203c3%203%203%205-1%205-2%201-2%201-2-3%201-3%201-3-1-2H3l-1%201c-2%201-3%207-1%208v1l1%201%201-1%202-1c2%200%202%200%201%201-2%202-2%202%200%202h3c1-1%201-1%201%201v2l1%204c0%204%200%204-2%202-2-1-2-4%200-2l1-1c0-1-3-2-7%200-4%201-4%206-1%206%202%200%202%201%202%202%200%202%202%203%202%200%201-2%203%200%203%202l1%201c1%200%202%201%202%206l-1%207v1c1%201%202%204%201%205v1l-1%201-3-1v-1l-1-2-2-1-1-1H2l1-1c2%200%202-1%200-2l-3-2v4c0%204%200%205%202%205l3%201H2c-2%200-2%200-2%2018%200%2019%200%2021%203%2021v1l-1%201c-2%200-3%2025-1%2026v28l-1%209c0%208%202%2010%202%203%200-2%200-3%201-2%201%202%201%202%202%201s2-2%203-1v-2c2%201%202%206%200%208v3c1%202%201%203-2%206-3%204-4%204-4%200%200-8%200-9-1-6a1592%201592%200%20001%20139h3l-3%201-2%202c0%201%204%203%205%202l1%202-3%201-3-1v10l1%2010v1l-1%206v4h48a289%20289%200%200050-1l52%201a530%20530%200%200072-2c1%201%202%202%205%202s4%200%203-1l2-1c4-1%206%200%204%201-1%201%200%201%204%201h5l-2-2-1-2%203%201%201%202%2012%201h13V66h-6l3-2c2%201%203-4%202-12%200-9-1-10-3-8h-1v-3h2c2%202%202%201%202-5s-1-8-2-9v-1l2-2c0-2%200-2-1-1h-2l-4-2c-3%201-5-1-4-2h2l1-1c0-2%200-2%201-1%203%202%207%200%206-3%200-1-6%200-9%202l-3%202-2-2c-1-3-4-4-2-1v3c-2%203-6%203-6%200h-1c-2%201-12-1-12-3s0-2-1-1c0%201-1%201-4-1-4-1-4-2%200-1%202%200%202%200%201-1l1-2%202-1-1-1c-2%201-2%200%200-2V3l-2%201h-2c-1-2-3%200-3%203l-1%202-1-2c-1-1-1-1-1%201s0%202-2%201l-2-2-14-6h-6l-6%202c-3%200-4%200-3%201s1%201-1%202h-3c-1-1-1-1%201-1s2%200%201-1l-2-1c1-1-3-2-7-1-2%200-3%201-1%201h2l-2%201c-3%201-1%202%205%202l1%203c0%202%203%203%205%201l-1-1V8c1-1%202%200%204%201h2c-1-2%200-2%201-2l2-2c1-3%203-3%208-2s7%204%202%203h-4v1l4%202%203%201-1-1h4c5%200%2014%204%2014%206l1%201h4c2%202%202%202%201%203l-2%203c1%201%202%200%203-1l5-2%205%201v1l-1%202c2%202%206%202%209%201h3c1%202%202%202%203%200%201-1%207%200%208%202l-1%201-2%201c0%203-1%204-2%202s-7-4-7-2l1%201%201%201-2%201-1-1c1-1%200-1-2-1l-4%201-2%201c-3%200-3%201-1%203s2%206%201%205c-2%200-3%202-2%204%200%202%200%202-2%201-3-2-3-1-3%202l-1%203-1%203-2%203-2-1c1-1%200-1-1-1l1-2%201-2v-4l1-1-1-2-1%201h-1l-1%201v4l-1%201-4%204c1%200-3%205-5%205l-1%201-1%202c-2%201%200%203%201%203v-1l1-1h1v-2h4l3%201-1%201h1c3-1%203%202%200%203-2%201-2%201-1%202l2%201c0%202%202%203%205%202%202-1%202%200%202%203l1%201v3h-2c0-2-1%200-2%202l2%202%206%201-2%201v3l-1-1-2-1c-2%201-4%200-4-2h-1l-3-1-4-2c-1-1-2-1-1-2l1-1c1%202%204-1%204-4s0-4-1-3l-1%202-1%201v-7l-1%202-3%203-3%202h-4l-3-1-3-2c-4%200-20-13-29-22l-6-6-17-16c0-2-2-3-3-3-3%200-4-7-1-10v-1c-3%200-5-3-4-4V5h-2c-2%202-3%201-4-2s-2-3-6-3l-5%201-1%201-2-1h-19l-3%201c-4-2-6-2-6%201m49%20101c1%202%201%203-1%202l-1%201-1%201-6-1%202%201%202%202v1l1%202%202%203%202%201%204-1c2%200%202%200%200-1v-3h6l2-2c2%200%202%200%201-1-2%200-2-1%200-3%201-1%201-1-1-2-1-1-2-1-3%201-3%202-7%202-6-1v-2c-3-2-3-1-3%202M61%20209v1l2%201%201%203%201%201%201-1h1l2%201%201%202c3%202%203%204%200%207l-1%202c1-1%203%200%204%201l2%202-3%202c-3%201-3%205-1%207l1%203c-1%201-1%201-2-1-1-3-2-3-1%201%200%202%200%203-2%203l-2%201h2l2%202-1%201h-1l-4%202-5%201c-2%201%204%202%207%201h5c1%201%201%200%201-4l1-3v13l-1%203%201-3c2-4%202-4%202%208l1%208v2c-2%200-1%203%201%203v-3l3-1h5l1-1%202%204c2%204%202%204%204%203%201-2%201-2%201%202%200%203%200%203%201%202l1-1%201-1%202-2%201-1%202-1v-1c-2-1-2-10-1-11v-3l-1%201c-1%202-1%202-1%200v-3h-5c-12%202-18%200-9-2l6-1c3%200%202-2-1-8s-7-9-12-9v-2l-1-3c0-2%200-2%201-1%201%203%202%203%205%201%202-1%203-1%203%201%201%201%200%201-2%202l-3%201%202%201c6%202%209-1%208-6v-2l1%202%202%203v-3c0-3%200-3%201-1%201%201%201%201%201-1l1-4c2-1%201-1-4-1-3%200-4%200-5%202s-1%202-1-1v-3l-3-1c-3-3-5-2-4%201l-1%202c-1%200-2%200-1-1l-1-2c-1-1%201-3%205-6%202-1%202-2%202-4l-1-2c0-2-3-1-5%201h-2l-2-1c-2%201-1%200%201-2s1-3-4-3h-8M0%20294l1%2034a1542%201542%200%2000-1-34m256%2010v2c2%200%203%204%201%204l-1%201c1%203-1%203-2%201v-2l-2-2-1-1h2v-1c0-2-4-2-4-1l-2%201-2%201-2%201c-1%200-2%200-1%201h1l1%201c0%202-5%204-6%202-1-1-1-1-2%201l-1%202-1-1-2-3c-3-2-6-2-5%201%201%201%200%201-2%201l-5%201h-1c-2-1-6%202-6%204h-1l-3-1-7%202-7%201-2-1h-3l-1%201v1c-1%201-9%202-11%201h-2l-5%201c-4%200-4%200-3-4v-1l-2%204h-3c-3%200-3%200-1%201%203%201%202%202-2%202-5%201-7%202-5%203h10l5%201%206%202h10l5%201h3l4%202c3%202%207%201%206-1%200-1%202-1%206%201l2-1h3c2%200%203-2%200-4-2-1%202-2%207-2h2c-2-1-1-2%203-2%205%200%205%201%201%202l-2%201%202%201h3l3%201%205%201h3l1%201%201-3c0-3%201-4%206-3%204%200%203%202-2%202-3%200%200%202%203%202l3%201%202%201c2-1%201-3-1-3l1-1h3l6%201c4%200%205-1%205-2%200-2-1-2-3-2h-2l3-1c2%200%202-1%202-3l-1-3-3-1%202-1h2c0-2-2-2-3-1h-2c-1-2%201-3%204-2l1-2c0-2%200-2-4-1l-4-1-1-2-3-2-2-1'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.5025641025641026,"src":"/static/ff525dc0b90a1761bed30323ee74f6b6/b5bdb/preview.jpg","srcSet":"/static/ff525dc0b90a1761bed30323ee74f6b6/40917/preview.jpg 293w,\n/static/ff525dc0b90a1761bed30323ee74f6b6/3c0b6/preview.jpg 585w,\n/static/ff525dc0b90a1761bed30323ee74f6b6/b5bdb/preview.jpg 1170w,\n/static/ff525dc0b90a1761bed30323ee74f6b6/a6c62/preview.jpg 1200w","srcWebp":"/static/ff525dc0b90a1761bed30323ee74f6b6/2e5a7/preview.webp","srcSetWebp":"/static/ff525dc0b90a1761bed30323ee74f6b6/05ceb/preview.webp 293w,\n/static/ff525dc0b90a1761bed30323ee74f6b6/5c538/preview.webp 585w,\n/static/ff525dc0b90a1761bed30323ee74f6b6/2e5a7/preview.webp 1170w,\n/static/ff525dc0b90a1761bed30323ee74f6b6/a7c53/preview.webp 1200w","sizes":"(max-width: 1170px) 100vw, 1170px"}}}}},"allMarkdownRemark":{"edges":[]}},"pageContext":{"slug":"/luislost-challenge/","previous":{"fields":{"slug":"can-i-use-hooks-today"},"frontmatter":{"title":"Exploring Node.js","tags":["javascript","nodejs","webapp"]}},"next":null,"tag":["cpp","algorithms"]}},"staticQueryHashes":["2620024091","63159454"]}